name: Build & Publish to Release

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install Dependency
        run: go get

      - name: Create Build Directory
        run: mkdir build

      - name: Build for Darwin
        run: GOOS=darwin GOARCH=amd64 go build -o build/server_darwin_x64

      - name: Build for Linux x64
        run: GOOS=linux GOARCH=amd64 go build -o build/server_linux_x64

      - name: Build for Linux x86
        run: GOOS=linux GOARCH=386 go build -o build/server_linux_x86

      - name: Build for Windows x64
        run: GOOS=windows GOARCH=amd64 go build -o build/server_windows_x64.exe

      - name: Build for Windows x86
        run: GOOS=windows GOARCH=386 go build -o build/server_windows_x86.exe

      - uses: actions/upload-artifact@master
        with:
          name: Build for Darwin
          path: build/server_darwin_x64

      - uses: actions/upload-artifact@master
        with:
          name: Build for Linux x64
          path: build/server_linux_x64

      - uses: actions/upload-artifact@master
        with:
          name: Build for Linux x86
          path: build/server_linux_x86

      - uses: actions/upload-artifact@master
        with:
          name: Build for Windows x64
          path: build/server_windows_x64.exe

      - uses: actions/upload-artifact@master
        with:
          name: Build for Windows x86
          path: build/server_windows_x86.exe

  zip:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@master
        with:
          name: Build for Darwin
          path: build/server_darwin_x64

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Build for Darwin

      - uses: actions/download-artifact@master
        with:
          name: Build for Linux x64
          path: build/server_linux_x64

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Build for Linux x64

      - uses: actions/download-artifact@master
        with:
          name: Build for Linux x86
          path: build/server_linux_x86

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Build for Linux x86

      - uses: actions/download-artifact@master
        with:
          name: Build for Windows x64
          path: build/server_windows_x64.exe

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Build for Windows x64

      - uses: actions/download-artifact@master
        with:
          name: Build for Windows x86
          path: build/server_windows_x86.exe

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Build for Windows x86

      - name: Zip Build file for Darwin
        run: zip build/server_darwin_x64.zip build/server_darwin_x64

      - name: Zip Build file for Linux x64
        run: zip build/server_linux_x64.zip build/server_linux_x64

      - name: Zip Build file for Linux x86
        run: zip build/server_linux_x86.zip build/server_linux_x86

      - name: Zip Build file for Windows x64
        run: zip build/server_windows_x64.exe.zip build/server_windows_x64.exe

      - name: Zip Build file for Windows x86
        run: zip build/server_windows_x86.exe.zip build/server_windows_x86.exe

      - uses: actions/upload-artifact@master
        with:
          name: Zipped Build for Darwin
          path: build/server_darwin_x64.zip

      - uses: actions/upload-artifact@master
        with:
          name: Zipped Build for Linux x64
          path: build/server_linux_x64.zip

      - uses: actions/upload-artifact@master
        with:
          name: Zipped Build for Linux x86
          path: build/server_linux_x86.zip

      - uses: actions/upload-artifact@master
        with:
          name: Zipped Build for Windows x64
          path: build/server_windows_x64.exe.zip

      - uses: actions/upload-artifact@master
        with:
          name: Zipped Build for Windows x86
          path: build/server_windows_x86.exe.zip

  release:
    runs-on: ubuntu-latest
    needs: [zip]
    steps:
      - uses: actions/download-artifact@master
        with:
          name: Zipped Build for Darwin
          path: build/server_darwin_x64.zip

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Zipped Build for Darwin

      - uses: actions/download-artifact@master
        with:
          name: Zipped Build for Linux x64
          path: build/server_linux_x64.zip

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Zipped Build for Linux x64

      - uses: actions/download-artifact@master
        with:
          name: Zipped Build for Linux x86
          path: build/server_linux_x86.zip

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Zipped Build for Linux x86

      - uses: actions/download-artifact@master
        with:
          name: Zipped Build for Windows x64
          path: build/server_windows_x64.exe.zip

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Zipped Build for Windows x64

      - uses: actions/download-artifact@master
        with:
          name: Zipped Build for Windows x86
          path: build/server_windows_x86.exe.zip

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Zipped Build for Windows x86

      - name: Set Version
        run: echo "::set-output name=version::$(echo ${{ github.sha }} | cut -c -6)"
        id: version

      - uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Darwin Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/server_darwin_x64.zip
          asset_name: server_darwin_x64.zip
          asset_content_type: application/zip

      - name: Upload Linux x64 Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/server_linux_x64.zip
          asset_name: server_linux_x64.zip
          asset_content_type: application/zip

      - name: Upload Linux x86 Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/server_linux_x86.zip
          asset_name: server_linux_x86.zip
          asset_content_type: application/zip

      - name: Upload Windows x64 Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/server_windows_x64.exe.zip
          asset_name: server_linux_x86.zip
          asset_content_type: application/zip

      - name: Upload Windows x86 Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/server_windows_x86.exe.zip
          asset_name: server_linux_x86.zip
          asset_content_type: application/zip
